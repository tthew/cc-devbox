🔍 Checking environment setup...
✅ .env.host file exists
🔍 Checking required variables...
✅ Set: NEXT_PUBLIC_SUPABASE_URL
✅ Set: NEXT_PUBLIC_SUPABASE_ANON_KEY
✅ Set: SUPABASE_SERVICE_ROLE_KEY
✅ Set: DATABASE_URL
✅ Set: DIRECT_URL
✅ Set: JWT_SECRET
✅ Set: NEXTAUTH_SECRET
✅ Set: NEXTAUTH_URL
✅ All required environment variables are set
🏗️  Building Claude Code development environment...
#1 [internal] load local bake definitions
#1 reading from stdin 531B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 11.22kB done
#2 WARN: FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value "linux/arm64" (line 5)
#2 WARN: FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value "linux/arm64" (line 41)
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/ubuntu:24.04
#3 DONE 0.9s

#4 [internal] load .dockerignore
#4 transferring context: 1.76kB done
#4 DONE 0.0s

#5 [internal] load build context
#5 DONE 0.0s

#6 [builder 1/6] FROM docker.io/library/ubuntu:24.04@sha256:440dcf6a5640b2ae5c77724e68787a906afb8ddee98bf86db94eea8528c2c076
#6 resolve docker.io/library/ubuntu:24.04@sha256:440dcf6a5640b2ae5c77724e68787a906afb8ddee98bf86db94eea8528c2c076 done
#6 DONE 0.0s

#7 importing cache manifest from life-in-hand-dev:latest
#7 ERROR: failed to configure registry cache importer: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed

#5 [internal] load build context
#5 transferring context: 329B done
#5 DONE 0.0s

#8 [runtime 15/37] RUN mkdir -p ~/.npm-global     && npm config set prefix ~/.npm-global     && echo 'export PATH=~/.npm-global/bin:$PATH' >> ~/.bashrc     && echo 'export PATH=~/.npm-global/bin:$PATH' >> ~/.zshrc     && npm cache clean --force
#8 CACHED

#9 [runtime 25/37] RUN apt-get clean && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*
#9 CACHED

#10 [runtime  5/37] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && apt-get clean     && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/* /tmp/* /var/tmp/*
#10 CACHED

#11 [runtime 26/37] RUN apt-get update && apt-get install -y     chromium-browser     firefox     xvfb     libgtk-3-0     libgdk-pixbuf2.0-0     libxcomposite1     libxdamage1     libxrandr2     libasound2t64     libatk1.0-0     libdrm2     libxss1     && apt-get clean     && apt-get autoremove -y     && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/* /tmp/* /var/tmp/*
#11 CACHED

#12 [runtime 20/37] WORKDIR /workspace
#12 CACHED

#13 [runtime 24/37] RUN echo '#!/bin/bash\nsupabase "$@" --project-ref host --db-url postgresql://postgres:postgres@host.docker.internal:54322/postgres' > /usr/local/bin/supabase-host && chmod +x /usr/local/bin/supabase-host
#13 CACHED

#14 [runtime 19/37] RUN mkdir -p /workspace && chown -R dev:dev /workspace
#14 CACHED

#15 [runtime 17/37] RUN echo '# Basic ZSH setup for Claude Code development' >> ~/.zshrc     && echo 'autoload -U compinit && compinit' >> ~/.zshrc     && echo 'autoload -U colors && colors' >> ~/.zshrc     && echo 'setopt HIST_IGNORE_DUPS' >> ~/.zshrc     && echo 'setopt HIST_FIND_NO_DUPS' >> ~/.zshrc     && echo 'setopt SHARE_HISTORY' >> ~/.zshrc     && echo 'setopt AUTO_CD' >> ~/.zshrc     && echo 'setopt AUTO_PUSHD' >> ~/.zshrc     && echo 'setopt PUSHD_IGNORE_DUPS' >> ~/.zshrc
#15 CACHED

#16 [runtime 13/37] RUN mkdir -p .ssh     && chmod 700 .ssh     && ssh-keygen -t rsa -b 4096 -f .ssh/id_rsa -N ""     && cat .ssh/id_rsa.pub >> .ssh/authorized_keys     && chmod 600 .ssh/authorized_keys
#16 CACHED

#17 [runtime 18/37] RUN chown -R dev:dev /home/dev && chmod -R u+w /home/dev
#17 CACHED

#18 [builder 4/6] RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash -     && apt-get install -y nodejs     && apt-get clean     && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*
#18 CACHED

#19 [runtime  6/37] RUN npm install -g npm@latest pnpm@latest tsx@latest     && npm cache clean --force
#19 CACHED

#20 [runtime  4/37] RUN apt-get update && apt-get install -y --no-install-recommends     curl     wget     git     openssh-server     sudo     vim     nano     python3     python3-pip     ca-certificates     jq     zsh     fzf     dnsutils     iproute2     tree     less     squid     logrotate     cron     iptables     && apt-get clean     && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/* /tmp/* /var/tmp/*
#20 CACHED

#21 [runtime  8/37] RUN curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg     && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg     && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null     && apt-get update     && apt-get install -y gh     && apt-get clean     && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*
#21 CACHED

#22 [runtime 21/37] COPY --chown=dev:dev scripts/ /home/dev/scripts/
#22 CACHED

#23 [builder 3/6] RUN apt-get update && apt-get install -y --no-install-recommends     curl     wget     ca-certificates     gnupg     lsb-release     build-essential     && apt-get clean     && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*
#23 CACHED

#24 [runtime 10/37] RUN useradd -m -s /bin/zsh dev     && echo "dev:dev" | chpasswd     && usermod -aG sudo dev     && echo "dev ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers     && chmod 755 /home/dev     && chown -R dev:dev /home/dev     && mkdir -p /home/dev/.local/share     && chown -R dev:dev /home/dev/.local
#24 CACHED

#25 [builder 2/6] RUN ln -snf /usr/share/zoneinfo/UTC /etc/localtime && echo UTC > /etc/timezone
#25 CACHED

#26 [runtime  7/37] RUN pip3 install --no-cache-dir awscli --break-system-packages     && aws --version
#26 CACHED

#27 [runtime 23/37] RUN curl -fsSL https://cli.supabase.com/install.sh | bash
#27 CACHED

#28 [runtime  9/37] RUN curl -LsSf https://github.com/dandavison/delta/releases/download/0.17.0/delta-0.17.0-aarch64-unknown-linux-gnu.tar.gz | tar -xz     && mv delta-0.17.0-aarch64-unknown-linux-gnu/delta /usr/local/bin/     && rm -rf delta-0.17.0-aarch64-unknown-linux-gnu
#28 CACHED

#29 [runtime  3/37] COPY --from=builder /usr/local/bin/delta /usr/local/bin/
#29 CACHED

#30 [runtime 11/37] RUN mkdir /var/run/sshd     && sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config     && sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config     && sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/' /etc/ssh/sshd_config     && echo 'Port 22' >> /etc/ssh/sshd_config
#30 CACHED

#31 [builder 5/6] RUN npm install -g npm@latest pnpm@latest tsx@latest     && npm cache clean --force
#31 CACHED

#32 [builder 6/6] RUN curl -LsSf https://github.com/dandavison/delta/releases/download/0.17.0/delta-0.17.0-aarch64-unknown-linux-gnu.tar.gz | tar -xz     && mv delta-0.17.0-aarch64-unknown-linux-gnu/delta /usr/local/bin/     && rm -rf delta-0.17.0-aarch64-unknown-linux-gnu
#32 CACHED

#33 [runtime 14/37] RUN echo '[user]' > ~/.gitconfig     && echo '    name = Matt Richards' >> ~/.gitconfig     && echo '    email = m@tthew.berlin' >> ~/.gitconfig     && echo '[init]' >> ~/.gitconfig     && echo '    defaultBranch = main' >> ~/.gitconfig     && echo '[push]' >> ~/.gitconfig     && echo '    default = simple' >> ~/.gitconfig     && echo '[pull]' >> ~/.gitconfig     && echo '    rebase = false' >> ~/.gitconfig     && echo '[safe]' >> ~/.gitconfig     && echo '    directory = /workspace' >> ~/.gitconfig     && echo '    directory = *' >> ~/.gitconfig     && echo '[alias]' >> ~/.gitconfig     && echo '    st = status -s' >> ~/.gitconfig     && echo '    diff = diff --word-diff' >> ~/.gitconfig     && echo '    branch = branch -ra' >> ~/.gitconfig     && echo '    grep = grep -Ii' >> ~/.gitconfig     && echo '    ls = log --pretty=format:"%C(green)%h\\ %C(yellow)[%ad]%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative' >> ~/.gitconfig     && echo '    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat' >> ~/.gitconfig
#33 CACHED

#34 [runtime 22/37] RUN chmod +x /home/dev/scripts/*
#34 CACHED

#35 [runtime 27/37] RUN mkdir -p /var/log/squid /var/cache/squid /workspace/logs &&     chown -R proxy:proxy /var/log/squid /var/cache/squid &&     chown -R dev:dev /workspace/logs &&     apt-get clean &&     rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/* /tmp/* /var/tmp/* ~/.cache
#35 CACHED

#36 [runtime 16/37] RUN mkdir -p ~/.local/share/zsh ~/.local/share/bash     && echo 'export HISTFILE=~/.local/share/zsh/history' >> ~/.zshrc     && echo 'export HISTSIZE=10000' >> ~/.zshrc     && echo 'export SAVEHIST=10000' >> ~/.zshrc     && echo 'export HISTFILE=~/.local/share/bash/history' >> ~/.bashrc     && echo 'export HISTSIZE=10000' >> ~/.bashrc     && echo 'export HISTFILESIZE=10000' >> ~/.bashrc
#36 CACHED

#37 [runtime 12/37] WORKDIR /home/dev
#37 CACHED

#38 [runtime 34/37] COPY .claude/harden-environment.sh /usr/local/bin/harden-environment.sh
#38 ERROR: failed to calculate checksum of ref uy9g3cd734gupg0ln0xw0ixd7::qd5v67ru4htqle0bap53kqr9v: "/.claude/harden-environment.sh": not found

#39 [runtime 33/37] COPY .claude/manage-domains.sh /usr/local/bin/manage-domains.sh
#39 ERROR: failed to calculate checksum of ref uy9g3cd734gupg0ln0xw0ixd7::qd5v67ru4htqle0bap53kqr9v: "/.claude/manage-domains.sh": not found

#40 [runtime 31/37] COPY .claude/logrotate-squid.conf /etc/logrotate.d/squid
#40 ERROR: failed to calculate checksum of ref uy9g3cd734gupg0ln0xw0ixd7::qd5v67ru4htqle0bap53kqr9v: "/.claude/logrotate-squid.conf": not found

#41 [runtime 30/37] COPY .claude/domains-squid.conf /etc/squid/domains-squid.conf
#41 ERROR: failed to calculate checksum of ref uy9g3cd734gupg0ln0xw0ixd7::qd5v67ru4htqle0bap53kqr9v: "/.claude/domains-squid.conf": not found

#42 [runtime 29/37] COPY .claude/squid.conf /etc/squid/squid.conf
#42 ERROR: failed to calculate checksum of ref uy9g3cd734gupg0ln0xw0ixd7::qd5v67ru4htqle0bap53kqr9v: "/.claude/squid.conf": not found

#43 [runtime 35/37] COPY .claude/validate-security.sh /usr/local/bin/validate-security.sh
#43 ERROR: failed to calculate checksum of ref uy9g3cd734gupg0ln0xw0ixd7::qd5v67ru4htqle0bap53kqr9v: "/.claude/validate-security.sh": not found

#44 [runtime 28/37] COPY .claude/entrypoint.sh /usr/local/bin/entrypoint.sh
#44 ERROR: failed to calculate checksum of ref uy9g3cd734gupg0ln0xw0ixd7::qd5v67ru4htqle0bap53kqr9v: "/.claude/entrypoint.sh": not found

#45 [runtime 32/37] COPY .claude/log-cleanup.sh /usr/local/bin/log-cleanup.sh
#45 ERROR: failed to calculate checksum of ref uy9g3cd734gupg0ln0xw0ixd7::qd5v67ru4htqle0bap53kqr9v: "/.claude/log-cleanup.sh": not found

#46 [runtime 36/37] COPY .claude/whitelist /usr/local/bin/whitelist
#46 ERROR: failed to calculate checksum of ref uy9g3cd734gupg0ln0xw0ixd7::qd5v67ru4htqle0bap53kqr9v: "/.claude/whitelist": not found
------
 > importing cache manifest from life-in-hand-dev:latest:
------
------
 > [runtime 28/37] COPY .claude/entrypoint.sh /usr/local/bin/entrypoint.sh:
------
------
 > [runtime 29/37] COPY .claude/squid.conf /etc/squid/squid.conf:
------
------
 > [runtime 30/37] COPY .claude/domains-squid.conf /etc/squid/domains-squid.conf:
------
------
 > [runtime 31/37] COPY .claude/logrotate-squid.conf /etc/logrotate.d/squid:
------
------
 > [runtime 32/37] COPY .claude/log-cleanup.sh /usr/local/bin/log-cleanup.sh:
------
------
 > [runtime 33/37] COPY .claude/manage-domains.sh /usr/local/bin/manage-domains.sh:
------
------
 > [runtime 34/37] COPY .claude/harden-environment.sh /usr/local/bin/harden-environment.sh:
------
------
 > [runtime 35/37] COPY .claude/validate-security.sh /usr/local/bin/validate-security.sh:
------
------
 > [runtime 36/37] COPY .claude/whitelist /usr/local/bin/whitelist:
------
